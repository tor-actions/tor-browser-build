#!/bin/bash
[% c("var/set_default_env") -%]

[% pc(c('var/compiler'), 'var/setup', {
  compiler_tarfile => c('input_files_by_name/' _ c('var/compiler')),
  gradle_tarfile => c("input_files_by_name/gradle"),
}) %]

pushd /var/tmp/dist/android-toolchain/android-sdk-linux/
cd build-tools
unzip $rootdir/'[% c("input_files_by_name/build_tools_35") %]'
mv android-15 35.0.0

cd ../platforms
unzip $rootdir/'[% c("input_files_by_name/platform_35") %]'
popd

distdir=/var/tmp/dist/[% project %]
builddir=/var/tmp/build/[% project %]
mkdir $distdir
mkdir /var/tmp/build

tar -C /var/tmp/dist -xf $rootdir/[% c('input_files_by_name/rust') %]
export PATH=/var/tmp/dist/rust/bin:/var/tmp/dist/ninja:$PATH
export RUST_ANDROID_GRADLE_PYTHON_COMMAND=python3

export JAVA_HOME=/usr/lib/jvm/java-1.17.0-openjdk-amd64

[% INCLUDE 'fake-git' %]

[% IF !c('var/fetch_gradle_dependencies') %]
  gradle_repo=/var/tmp/dist/gradle-dependencies
  mv $rootdir/[% c('input_files_by_name/gradle-dependencies') %] $gradle_repo
  cp -rl $gradle_repo/dl/android/maven2/* $gradle_repo || true
  cp -rl $gradle_repo/m2/* $gradle_repo || true
  cp -rl $gradle_repo/maven2/* $gradle_repo || true
[% END %]

tar -C /var/tmp/build -xf [% project %]-[% c('version') %].tar.[% c('compress_tar') %]

mv /var/tmp/build/[% project %]-[% c('version') %] $builddir

cd $builddir

# Prepare the offline build.

tar -xf $rootdir/[% c('input_files_by_name/glean-wheels') %]
export GLEAN_PYTHON_WHEELS_DIR=$builddir/glean-wheels
# Setting GLEAN_PYTHON_WHEELS_DIR is not enough: a Rust build script will still
# try to install Glean with pip.
cat > $rootdir/pip.conf << 'EOF'
[global]
find-links = /var/tmp/build/glean/glean-wheels
index-url =
no-index = yes
EOF
export PIP_CONFIG_FILE=$rootdir/pip.conf
# Move the directory for hardcoding the path in .cargo/config.
tar -C $builddir -xf $rootdir/[% c('input_files_by_name/cargo_vendor') %]
# Make sure our vendored crates are used for offline builds.
cat >> .cargo/config.toml << 'EOF'

[source.crates-io]
replace-with = "vendored-sources"

[source.vendored-sources]
directory = "/var/tmp/build/glean/vendor"

[net]
offline=true
EOF

tar -xf $rootdir/[% c('input_files_by_name/uniffi-rs') %]

patch -p1 < $rootdir/use-custom-gradle-repo.diff
patch -p1 < $rootdir/use-uniffi-noop.diff

gradle_flags="--offline --no-daemon -PuniffiBindgenNoop=$builddir/uniffi-rs/uniffi-bindgen -PgradleDependenciesUrl=file:///var/tmp/dist/gradle-dependencies"
gradle $gradle_flags :glean:assembleRelease
gradle $gradle_flags publish
mv build/maven $distdir

cd /var/tmp/dist
[% c('tar', {
    tar_src => [ project ],
    tar_args => '-caf ' _ dest_dir _ '/' _ c('filename'),
}) %]
