---
### This file is used to override options from rbm.conf to adapt them
### to your local setup.
###
### Copy this file as rbm.local.conf to enable it, and uncomment the
### options you want to modify.


### The tmp_dir option defines where temporary files are stored. The
### builds are made from this directory, so using a directory on a fast
### disk can improve build time. By default we are using a tmp directory
### under the tor-browser-build directory.
#tmp_dir: /tmp

### The debug option defines whether a debugging shell should be opened
### automatically in the build directory/container in case of build
### failure. If you are doing automated builds, you might want to disable
### this.
#debug: 0

### The build_log option defines in which file the build logs of each
### component are stored. If you set it to '-' the logs are output on
### stdout and stderr.
#build_log: '-'

### By default, the logs from previous builds are kept in the log files.
### If you set build_log_append to 0, then previous logs are cleaned
### when starting a new build.
#build_log_append: 0

### The num_procs option can be used to select the number of
### build processes to run simultaneously. You can also use the
### RBM_NUM_PROCS environment variable. The default is the number of
### processing units available, as returned by `nproc`.
#num_procs: 8

buildconf:
  buildconf: 1

  ### The buildconf/git_signtag_opt option is useful when you tag a release.
  ### It is used to set the 'git tag' argument to select the keyid for
  ### signing the tag.
  #git_signtag_opt: '-u keyid'

  ### The buildconf/devmole_auth_token option is used for starting remote builds on
  ### Mullvad's devmole server using the kick_devmole_build step in the release
  ### project. Such a token can be acquired from the Mullvad sysadmins.
  #devmole_auth_token: abcdefghijklmnopqrstuvwxyz012345

var:
  local_conf: 1

  ### The var/sign_build option defines if you want to sign the
  ### sha256sums-unsigned-build.txt and
  ### sha256sums-unsigned-build.incrementals.txt files with gpg.
  #sign_build: 1

  ### The var/sign_build_gpg_opts option can be used to define some gpg
  ### options to select the key to use to sign the sha256sums-unsigned-build.txt
  ### and sha256sums-unsigned-build.incrementals.txt files.
  #sign_build_gpg_opts: '--local-user XXXXXXXX'

  ### The var/tpo_user option is used on the release upload_sha256sums step
  ### and is the user on people.torproject.org that ssh/rsync will try to
  ### upload the files to
  #tpo_user: username

  ### This option enables generation of development artifacts
  #dev_artifacts: '[% c("var/nightly") %]'

  ### The clean configuration is used by the cleaning script to find the
  ### branches and build targets you are using, to compute the list of
  ### files that should be kept.
  ###
  ### If you only do alpha builds for all platforms, you can use the
  ### following configuration:
  #clean:
  #  HEAD:
  #    - project: release
  #      target:
  #        - alpha
  #        - torbrowser-all
  #
  ### If you are doing 'release' builds in the maint-7.0 branch and
  ### 'alpha' builds in the main branch, you can use the following
  ### configuration:
  #clean:
  #  main:
  #    - project: release
  #      target:
  #        - alpha
  #        - torbrowser-all
  #  maint-7.0:
  #    - project: release
  #      target:
  #        - release
  #        - torbrowser-all

targets:

  ### testbuild is based on alpha by default. Uncomment this if you want it
  ### to be based on nightly.
  #torbrowser-testbuild:
  #  - testbuild
  #  - nightly

  testbuild:
    var:
      testbuild: 1

      ### Uncomment this if you want to create mar files in your test build.
      #build_mar: 1

      ### Uncomment this if you want to enable the merge_aars step in your test
      ### build, meaning that GeckoView will be compiled for all architectures.
      #android_single_arch: 0

  nightly:

    ### By default 'fetch' is set to 'if_needed', meaning that new
    ### commits will be fetched automatically during each build, if
    ### the selected commit (or branch, or tag) is not present, or if
    ### it is pointing to a branch. With the nightly target, some projects
    ### are pointing to a branch, meaning they will be fetched for each
    ### build. If you want to disable automatic fetchs and decide at
    ### which point new commits are fetched, you can set 'fetch' to '0'
    ### and run `make fetch` when you want to fetch new commits.
    #fetch: 0

# vim: filetype=yaml sw=2
